// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
}

enum Difficulty {
  EASY
  MEDIUM
  HARD
}

enum Status {
  ACCEPTED
  WRONG_ANSWER
  TLE
  RUNTIME_ERROR
  COMPILE_ERROR
}

model User {
  id          String       @id @default(uuid())
  name        String?
  email       String       @unique
  image       String?
  role        UserRole     @default(USER)
  password    String
  submissions Submission[]
  problem     Problem[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Problem {
  id          String     @id @default(uuid())
  title       String
  description String
  difficulty  Difficulty
  tags        String[] //
  userId      String
  examples    Json
  constraints String
  hints       String?
  editorial   String?

  testCases         Json
  codeSnippets      Json
  referenceSolution Json

  submissions Submission[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationship
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Submission {
  id        String   @id @default(uuid())
  userId    String
  problemId String
  language  String
  code      String
  status    Status
  createdAt DateTime @default(now())

  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  problem Problem @relation(fields: [problemId], references: [id], onDelete: Cascade)
}
